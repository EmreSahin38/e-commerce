// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReadApp.Models;

#nullable disable

namespace ReadApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250207111907_AddUserTable")]
    partial class AddUserTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("ReadApp.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Roman"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Hikaye"
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "Biyografi"
                        },
                        new
                        {
                            CategoryId = 4,
                            Name = "Söylev"
                        });
                });

            modelBuilder.Entity("ReadApp.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Pages")
                        .HasColumnType("TEXT");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 2,
                            IsActive = true,
                            Name = "Son Ayı",
                            Pages = 250m
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 1,
                            IsActive = true,
                            Name = "Tarık Buğra'nın Roman Dünyası",
                            Pages = 350m
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 1,
                            IsActive = true,
                            Name = "Cadı",
                            Pages = 342m
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 1,
                            IsActive = true,
                            Name = "Ateşle Oynayan Kız",
                            Pages = 350m
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 1,
                            IsActive = true,
                            Name = "Ejderha Dövmeli Kız",
                            Pages = 380m
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 1,
                            IsActive = true,
                            Name = "Arı Kovanına Çomak Sokan Kız",
                            Pages = 270m
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 1,
                            IsActive = true,
                            Name = "Kız Kulesindeki Kızılderili",
                            Pages = 250m
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 1,
                            IsActive = true,
                            Name = "Şeker Portakalı",
                            Pages = 269m
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 1,
                            IsActive = true,
                            Name = "Hayvan Çiftliği",
                            Pages = 452m
                        },
                        new
                        {
                            ProductId = 10,
                            CategoryId = 1,
                            IsActive = true,
                            Name = "Beyaz Diş",
                            Pages = 290m
                        },
                        new
                        {
                            ProductId = 11,
                            CategoryId = 2,
                            IsActive = true,
                            Name = "Küçük Prens",
                            Pages = 370m
                        },
                        new
                        {
                            ProductId = 12,
                            CategoryId = 1,
                            IsActive = true,
                            Name = "Silmarillion",
                            Pages = 700m
                        },
                        new
                        {
                            ProductId = 13,
                            CategoryId = 2,
                            IsActive = true,
                            Name = "La Fontaine Masalları",
                            Pages = 150m
                        },
                        new
                        {
                            ProductId = 14,
                            CategoryId = 3,
                            IsActive = true,
                            Name = "Anne Frank'in Hatıra Defteri",
                            Pages = 284m
                        },
                        new
                        {
                            ProductId = 15,
                            CategoryId = 4,
                            IsActive = true,
                            Name = "Nutuk",
                            Pages = 543m
                        });
                });

            modelBuilder.Entity("ReadApp.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Password = "password",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("ReadApp.Models.Product", b =>
                {
                    b.HasOne("ReadApp.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
